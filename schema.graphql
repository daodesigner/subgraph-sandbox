type FundingRoundFactory @entity {
  id: ID!
  owner: Bytes!
  coordinator: Coordinator!
  nativeToken: Token!
  contributorRegistry: ContributorRegistry!
  recipientRegistry: RecipientRegistry!
  currentRound: FundingRound!

  maciFactory: Bytes!
  coordinatorPubKey: String!
  stateTreeDepth: BigInt!
  messageTreeDepth: BigInt!
  voteOptionTreeDepth: BigInt!
  tallyBatchSize: BigInt!
  messageBatchSize: BigInt!
  batchUstVerifier: BigInt!
  qvtVerifier: BigInt!
  signUpDuration: BigInt!
  votingDuration: BigInt!

  fundingRounds: [FundingRound!] @derivedFrom(field: "fundingRoundFactory")

  createdAt: String!
  lastUpdatedAt: String!
}

type FundingRound @entity {
  id: ID!
  fundingRoundFactory: FundingRoundFactory!
  nativeToken: Token!


  coordinator: Bytes!
  maci: Bytes!
  voiceCreditFactor: BigInt!
  contributorCount: BigInt!
  matchingPoolSize: BigInt!
  totalSpent: BigInt!
  totalVotes: BigInt!
  isFinalized: Boolean!
  isCancelled: Boolean!
  tallyHash: String


  recipients: [Recipient!] @derivedFrom(field: "fundingRounds")
  contributors: [Contributor!] @derivedFrom(field: "fundingRounds")
  contributions: [Contribution!] @derivedFrom(field: "fundingRound")

  createdAt: String!
  lastUpdatedAt: String!

}

type RecipientRegistry @entity {
  id: ID!
  fundingRoundFactory: FundingRoundFactory!

  recipients: [Recipient!] @derivedFrom(field: "recipientRegistry")

  createdAt: String!
  lastUpdatedAt: String!
}


type Recipient @entity {
  id: ID!
  recipientRegistry: RecipientRegistry

  requestType: String!
  requester: String!
  submissionTime: String!
  deposit: BigInt!
  recipientAddress: Bytes!
  recipientMetadata: String!
  rejected: Boolean

  fundingRounds: [FundingRound!]

  createdAt: String!
  lastUpdatedAt: String!
}

type ContributorRegistry @entity {
  id: ID!
  fundingRoundFactory: FundingRoundFactory!

  contributors: [Contributor!] @derivedFrom(field: "contributorRegistry")

  createdAt: String!
  lastUpdatedAt: String!
}



type Contributor @entity {
  id: ID!
  contributorRegistry: ContributorRegistry!

  verified: Boolean!
  verifiedTimeStamp: String!
  sponsors: [Bytes!]
  contributorAddress: Bytes

  fundingRounds: [FundingRound!]
  contributions: [Contribution!] @derivedFrom(field: "contributor")

  createdAt: String!
  lastUpdatedAt: String!
}

type Coordinator @entity {
  id: ID!
  fundingRoundFactory: FundingRoundFactory!
  contact: String

  createdAt: String!
  lastUpdatedAt: String!
}

type Contribution @entity {
  id: ID!
  contributor: Contributor!
  fundingRound: FundingRound!
  amount: BigInt!
  voiceCredits: BigInt!

  createdAt: String!
}

type Donation @entity {
  id: ID!
  recipient: Recipient!
  fundingRound: FundingRound!
  amount: BigInt!
  voteOptionIndex: BigInt!

  createdAt: String!
}

type Token @entity {
  id: ID!
  tokenAddress: Bytes!
  symbol: String
  decimals: BigInt
  createdAt: String!
  lastUpdatedAt: String!
}